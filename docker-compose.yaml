services:
  # Used for navigating traces / spans
  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./observability/tempo.yaml:/etc/tempo.yaml
      - tempo_data:/tmp/tempo
    ports:
      - "3200:3200"  # tempo
      - "9095:9095"  # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http

  # Used for navigating metrics
  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./observability/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  # Used for navigating logs / correlating logs with traces and vice versa
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  # Used for shipping logs to loki
  promtail:
    image: grafana/promtail:1.4.0
    container_name: promtail
    command: -config.file=/etc/promtail/config.yaml
    volumes:
      - './observability/promtail.yaml:/etc/promtail/config.yaml'
      # The application log file that promtail will tail and ship to loki
      # Used to be able to view local logs in grafana and correlate them with traces
      # IMPORTANT: The file mount sync breaks the bind-mount, which is based on inode when a new log will be appended
      # thus causing promtail to stop tailing the file. To fix this, simply restart the  promtail container
      - ./app.log:/var/log/app.log:ro
    depends_on:
      - loki

  # The Grafana UI for viewing traces, metrics and logs
  grafana:
    image: grafana/grafana:9.4.3
    volumes:
      - ./observability/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3000:3000"

  pg:
    image: postgres:alpine
    container_name: pg
    restart: on-failure
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./migrations/library.sql:/docker-entrypoint-initdb.d/library.sql

volumes:
  tempo_data:
    driver: local
  loki_data:
    driver: local
  pg_data:
    driver: local
